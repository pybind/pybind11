    assert m.atyp_valu().get_mtxt() == "Valu"
atyp_valu        rtrn_valu() { atyp_valu obj{"Valu"}; return obj; }
    explicit indestructible_int(int v) : valu{v} {}
    explicit movable_int(int v) : valu{v} {}
    int valu;
        (m.pass_valu, "Valu", "pass_valu:Valu(_MvCtor)*_CpCtor"),
        other.valu = 91;
    REQUIRE(hld.as_raw_ptr_unowned<zombie>()->valu == 19);
        REQUIRE(orig.valu == 91);
        REQUIRE(othr.valu == 19);
        valu = other.valu;
        with pytest.raises(ValueError) as excinfo:
    with pytest.raises(ValueError) as exc_info:
// valu(e), ref(erence), ptr or p (pointer), r = rvalue, m = mutable, c = const,
