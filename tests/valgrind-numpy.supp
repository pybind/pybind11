# Valgrind suppression file for NumPy
#
# Copyright (c) 2020 Boris Staletic <boris.staletic@gmail.com>
# Copyright (c) 2020 Yannick Jadoul <yannick.jadoul@belgacom.net>
#
# All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

{
   Leaks present when just importing NumPy
   Memcheck:Leak
   fun:malloc
   fun:_PyMem_RawMalloc
   fun:PyObject_Malloc
   fun:_PyObject_GC_Alloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:tuple_alloc
   fun:PyTuple_Pack
   ...
   fun:__pyx_pymod_exec_*
}

{
   Leaks present when just importing NumPy (bis)
   Memcheck:Leak
   fun:malloc
   fun:_PyMem_RawMalloc
   fun:PyObject_Malloc
   fun:_PyObject_New
   fun:PyCode_NewWithPosOnlyArgs
   fun:PyCode_New
   ...
   fun:__pyx_pymod_exec_*
}

{
   Leaks present when just importing NumPy (tris)
   Memcheck:Leak
   fun:malloc
   fun:_PyMem_RawMalloc
   fun:PyObject_Malloc
   fun:_PyObject_GC_Alloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:tuple_alloc
   fun:_PyTuple_FromArray
   fun:_PyObject_MakeTpCall
   fun:_PyObject_VectorcallTstate
   fun:PyObject_Vectorcall
   fun:call_function
   fun:_PyEval_EvalFrameDefault
   fun:_PyEval_EvalFrame
   fun:function_code_fastcall
   fun:_PyFunction_Vectorcall
}

{
   Leaks present when just importing NumPy (quater)
   Memcheck:Leak
   fun:malloc
   fun:_PyMem_RawMalloc
   fun:PyObject_Malloc
   fun:_PyObject_GC_Alloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:tuple_alloc
   fun:PyTuple_New
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
}

{
   Leaks present when just importing NumPy (quinquies)
   Memcheck:Leak
   fun:malloc
   fun:_PyMem_RawMalloc
   fun:PyObject_Malloc
   fun:_PyObject_GC_Alloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:tuple_alloc
   fun:PyTuple_New
   fun:dictiter_iternextitem
   fun:list_extend
   fun:_PyList_Extend
   fun:PySequence_List
}
